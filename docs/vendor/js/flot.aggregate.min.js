/* Flot.Aggregate */
(function(d) {
    function p(k, e) {
        var a = {};
        d.each(k, function(d, b) {
            b[e]in a ? a[b[e]].push(b) : a[b[e]] = [b]
        });
        return a
    }
    function q(k, e, a, l) {
        var b = null != e.xaxis.options.aggregate;
        l = null != e.yaxis.options.aggregate;
        if (b || l) {
            k = null ;
            var m = 0
              , h = 1;
            b ? k = e.xaxis.options.aggregate : l && (k = e.yaxis.options.aggregate,
            m = 1,
            h = 0);
            a = p(a, m);
            var f = [];
            switch (k) {
            case "count":
                d.each(a, function(n, a) {
                    b ? f.push([n, a.length]) : f.push([a.length, n])
                });
                break;
            case "min":
                d.each(a, function(a, g) {
                    var c = g[0][h];
                    d.each(g, function(a, b) {
                        c = Math.min(c, b[h])
                    });
                    b ? f.push([a, c]) : f.push([c, a])
                });
                break;
            case "max":
                d.each(a, function(a, g) {
                    var c = g[0][h];
                    d.each(g, function(a, b) {
                        c = Math.max(c, b[h])
                    });
                    b ? f.push([a, c]) : f.push([c, a])
                });
                break;
            case "avg":
                d.each(a, function(a, g) {
                    var c = 0;
                    d.each(g, function(a, b) {
                        c += b[h]
                    });
                    var e = c / g.length;
                    b ? f.push([a, e]) : f.push([e, a])
                });
                break;
            case "sum":
                d.each(a, function(a, e) {
                    var c = 0;
                    d.each(e, function(a, b) {
                        c += b[h]
                    });
                    b ? f.push([a, c]) : f.push([c, a])
                });
                break;
            default:
                return
            }
            a = e.data = f
        }
    }
    d.plot.plugins.push({
        init: function(d) {
            d.hooks.processRawData.push(q)
        },
        options: {
            xaxis: {
                aggregate: null
            },
            yaxis: {
                aggregate: null
            }
        },
        name: "aggregate",
        version: "1.0"
    })
})(jQuery);